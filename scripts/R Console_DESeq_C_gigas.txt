
R version 3.1.1 (2014-07-10) -- "Sock it to Me"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.1.0 (64-bit)

R es un software libre y viene sin GARANTIA ALGUNA.
Usted puede redistribuirlo bajo ciertas circunstancias.
Escriba 'license()' o 'licence()' para detalles de distribucion.

R es un proyecto colaborativo con muchos contribuyentes.
Escriba 'contributors()' para obtener m'as informaci'on y
'citation()' para saber c'omo citar R o paquetes de R en publicaciones.

Escriba 'demo()' para demostraciones, 'help()' para el sistema on-line de ayuda,
o 'help.start()' para abrir el sistema de ayuda HTML con su navegador.
Escriba 'q()' para salir de R.

Durante la inicializaci'on - Mensajes de aviso perdidos
1: Setting LC_CTYPE failed, using "C" 
2: Setting LC_COLLATE failed, using "C" 
3: Setting LC_TIME failed, using "C" 
4: Setting LC_MESSAGES failed, using "C" 
5: Setting LC_MONETARY failed, using "C" 
[R.app GUI 1.65 (6784) x86_64-apple-darwin13.1.0]

WARNING: You're using a non-UTF8 locale, therefore only ASCII characters will work.
Please read R for Mac OS X FAQ (see Help) section 9 and adjust your system preferences accordingly.
[Workspace restored from /Users/alumnomatlab/.RData]
[History restored from /Users/alumnomatlab/.Rapp.history]

> library(DESeq2)
Loading required package: S4Vectors
Loading required package: stats4
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: 'BiocGenerics'

The following objects are masked from 'package:parallel':

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ, clusterExport, clusterMap, parApply, parCapply, parLapply, parLapplyLB, parRapply, parSapply, parSapplyLB

The following object is masked from 'package:stats':

    xtabs

The following objects are masked from 'package:base':

    Filter, Find, Map, Position, Reduce, anyDuplicated, append, as.data.frame, as.vector, cbind, colnames, do.call, duplicated, eval, evalq, get, intersect, is.unsorted,
    lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, pmin.int, rank, rbind, rep.int, rownames, sapply, setdiff, sort, table, tapply, union, unique, unlist,
    unsplit

Loading required package: IRanges
Loading required package: GenomicRanges
Loading required package: GenomeInfoDb
Loading required package: Rcpp
Loading required package: RcppArmadillo
Mensajes de aviso perdidos
1: package 'DESeq2' was built under R version 3.1.2 
2: package 'BiocGenerics' was built under R version 3.1.2 
3: package 'IRanges' was built under R version 3.1.2 
4: package 'GenomicRanges' was built under R version 3.1.2 
5: package 'GenomeInfoDb' was built under R version 3.1.2 
6: package 'Rcpp' was built under R version 3.1.2 
7: package 'RcppArmadillo' was built under R version 3.1.2 
> data <- read.table("/Users/alumnomatlab/Desktop/Project/data/Cgigas-HS-count.txt", header = T, sep = "\t")
> rownames(data) <- data$Feature
> data <- data[,-1]
> head (DESeq2)
Error en head(DESeq2) : 
  error in evaluating the argument 'x' in selecting a method for function 'head': Error: objeto 'DESeq2' no encontrado
> head (data)
             X2M.Total X4M.Total X6m.Total X2M.HS.Total X4M.HS.Total X6M.HS.Total
CGI_10000001        25        26        35           56           10           35
CGI_10000002        56        16        36           34           19           29
CGI_10000003         0        19        25            6           79            8
CGI_10000004         0         2         1            5            0            2
CGI_10000005         0         0         0            0            0            0
CGI_10000009        93        68        58         1384         1287          816
> deseq2.colData <- data.frame(condition=factor(c(rep("Control", 3), rep("Heat-Shock", 3))), 
+                              type=factor(rep("single-read", 6)))
> rownames(deseq2.colData) <- colnames(data)
> deseq2.dds <- DESeqDataSetFromMatrix(countData = data,
+                                      colData = deseq2.colData, 
+                                      design = ~ condition)
> deseq2.dds <- DESeq(deseq2.dds)
estimating size factors
estimating dispersions
gene-wise dispersion estimates
mean-dispersion relationship
final dispersion estimates
fitting model and testing
> deseq2.res <- results(deseq2.dds)
> deseq2.res <- deseq2.res[order(rownames(deseq2.res)), ]
> head(deseq2.res)
log2 fold change (MAP): condition Heat-Shock vs Control 
Wald test p-value: condition Heat-Shock vs Control 
DataFrame with 6 rows and 6 columns
               baseMean log2FoldChange     lfcSE       stat       pvalue         padj
              <numeric>      <numeric> <numeric>  <numeric>    <numeric>    <numeric>
CGI_10000001  31.577608      0.6109184 0.5772895  1.0582530 2.899401e-01 5.004287e-01
CGI_10000002  31.411455      0.2376639 0.5525684  0.4301077 6.671173e-01 8.108845e-01
CGI_10000003  27.843547      1.0103915 0.7971988  1.2674273 2.050025e-01 4.046120e-01
CGI_10000004   1.634132      0.5839041 0.7983546  0.7313844 4.645444e-01           NA
CGI_10000005   0.000000             NA        NA         NA           NA           NA
CGI_10000009 736.886210      4.3733499 0.3622502 12.0727342 1.471621e-33 2.084212e-29
> dim(deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ])
[1] 3155    6
> tmp <- deseq2.res
> plot(tmp$baseMean, tmp$log2FoldChange, pch=20, cex=0.45, ylim=c(-3, 3), log="x", col="darkgray",
+      main="DEG Exposition to Heat-shock" (pval <= 0.05)",
+      xlab="mean of normalized counts",
Error: inesperado string constante in:
"     main="DEG Exposition to Heat-shock" (pval <= 0.05)",
     xlab=""
>      ylab="Log2 Fold Change")
Error: inesperado ')' in "     ylab="Log2 Fold Change")"
> plot(tmp$baseMean, tmp$log2FoldChange, pch=20, cex=0.45, ylim=c(-3, 3), log="x", col="darkgray",
+      main="DEG Exposure to Heat-shock conditions  (pval <= 0.05)",
+      xlab="mean of normalized counts",
+      ylab="Log2 Fold Change")
Mensajes de aviso perdidos
In xy.coords(x, y, xlabel, ylabel, log) :
  1357 x values <= 0 omitted from logarithmic plot
> tmp.sig <- deseq2.res[!is.na(deseq2.res$padj) & deseq2.res$padj <= 0.05, ]
> points(tmp.sig$baseMean, tmp.sig$log2FoldChange, pch=20, cex=0.45, col="red")
> abline(h=c(-1,1), col="blue")
> write.table(tmp.sig, "/Users/alumnomatlab/Desktop/Project/output/C_gigas_heatshock.tab", row.names = T)
> 